name: Publish Docker image

on:
  workflow_dispatch:
    inputs:
      docker_tag:
        description: 'Docker image tag'
        required: true
        default: ''
  push:
    tags:
      - '*'
  release:
    types: [published]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v3
      -
        name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      -
        name: Log in to GHCR (GitHub Container Registry)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - 
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            justma/chatgpt-next-chat
            ghcr.io/${{ github.repository_owner }}/chatgpt-next-chat
          tags: |
            type=raw,value=${{ github.event.inputs.docker_tag }},enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.docker_tag != '' && github.event.inputs.docker_tag != 'latest' }}
            type=raw,value=latest,enable=${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.docker_tag == '' || github.event.inputs.docker_tag == 'latest') }}
            type=ref,event=tag,enable=${{ github.event_name == 'push' }}
            type=semver,pattern={{version}}

      -
        name: Debug Tags
        run: echo "${{ steps.meta.outputs.tags }}" "${{ steps.meta.outputs.labels }}"

      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
